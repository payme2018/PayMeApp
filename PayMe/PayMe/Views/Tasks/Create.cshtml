@model Business.Task
@{
    ViewBag.Title = "Pay Me - Task Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <ol class="breadcrumb">
        <li>
            <a href="#">
                <em class="fa fa-home"></em>
            </a>
        </li>
        <li class="active">Tasks</li>
    </ol>
</div><!--/.row-->

<div class="panel panel-default">
    <div id="title" class="panel-heading">Create Task</div>
    <div class="panel-body">
        @if (TempData["Message"] != null && TempData["Message"].ToString() != "")
        {
            <p class="alert alert-success" id="successMessage">@TempData["Message"]</p>
        }

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @using (Html.BeginForm())
            {
            @Html.AntiForgeryToken()

            <div class="row">
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.ClientID, htmlAttributes: new { @class = "control-label manadatory" }) <span class="text-danger">*</span>
                    @Html.DropDownList("ClientID", ViewBag.Client as SelectList, "--Please select--", new { @class = "form-control input-lg" })
                    @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
                </div>

                <div class="col-lg-4">
                    @Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label manadatory" }) <span class="text-danger">*</span>
                    @Html.DropDownList("ProjectId", ViewBag.Project as SelectList, "--Please select--", new { @class = "form-control input-lg" })
                    @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="row">
                <div class="clearfix"></div>
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.TaskName, htmlAttributes: new { @class = "control-label manadatory" }) <span class="text-danger">*</span>
                    @Html.EditorFor(model => model.TaskName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label manadatory" })
                    <br />
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-lg-4">
                    <input type="submit" id="create" value="Create" class="btn btn-md btn-primary" />
                    <input type="submit" id="update" value="Update Value" onclick="return update()" class="btn btn-md btn-primary" />
                    @Html.ActionLink("Cancel", "/Index", "Tasks", null, new { @class = "btn btn-md btn-primary" })

                </div>
            </div>
        }
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>

    $(document).ready(function () {
        debugger;
        var ID = @ViewBag.editupdate;
        if ( ID==-1 )
        {
            $("#update").hide();
            $("#create").show();
        
            $('#title').text('Create Task');
        }
        else
        {
            $("#update").show();
            $("#create").hide();
            $('#title').text('Update Task');
        }
    });

    function update() {  
       alert('Hi')
    }  

    $("#ClientID").change(function () {
        var clientNo = $("#ClientID").val();
        if (clientNo == null || clientNo == "") {
            alert("Please Select Client");
            return;
        }
        $("input[id='ClientName']").val(clientNo);
        if (clientNo != null || clientNo != "") {
            $.ajax({
                url: "/Tasks/BindProject",
                type: "POST",
                data: JSON.stringify({ 'clientNo': clientNo }),
                dataType: "json",
                traditional: true,
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    debugger;
                    var listItems = "";
                    var list = "";
                    var a = result.bindingAddresses.project;
                    listItems = "<option value='" + -1 + "'>" + "--Please select--" + "</option>"
                    for (i in a) {
                        listItems += "<option value='" + a[i].Value + "'>" + a[i].Text + "</option>";
                    }
                    $("#ProjectId").html(listItems);
                },
                error: function () {
                    alert("An error has occured!!!");
                }
            });
        }
    });
</script>