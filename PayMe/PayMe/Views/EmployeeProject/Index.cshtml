@model Business.EmployeeProject
@{
    ViewBag.Title = "Pay Me - Assign Employee to Project";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <ol class="breadcrumb">
        <li>
            <a href="#">
                <em class="fa fa-home"></em>
            </a>
        </li>
        <li class="active">Management/Assign Employee to Project</li>
    </ol>
</div><!--/.row-->

<div class="panel panel-default">
    <div id="title" class="panel-heading">Assign Employee to Project</div>
    <div class="panel-body">
        @if (TempData["Message"] != null)
            {
            <p class="alert alert-success" id="successMessage">@TempData["Message"]</p>
        }

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @using (Html.BeginForm())
            {
            @Html.AntiForgeryToken()

            <div class="row">
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.ClientID, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.DropDownList("ClientID", ViewBag.Client as SelectList, "--Please select--", new { @class = "form-control input-lg" })
                    @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
                </div>

                <div class="col-lg-4">
                    @Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.DropDownList("ProjectId", ViewBag.Project as SelectList, "--Please select--", new { @class = "form-control input-lg" })
                    @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-2">
                    <label>Active Employee</label>
                    <br>
                    <input class="check-box" id="IsActive" type="checkbox">
                </div>
                <div class="col-lg-2" style="padding-top:30px">

                    <input id="Report" value="View" style="width:70px" class="btn btn-md btn-primary" />

                </div>
            </div>
        }
    </div>
</div>

<div style="float:right;"><a href="~/EmployeeProject/Create" class="btn btn-md btn-primary">Create</a></div>
<div id="grid" class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">Active Employee List</div>
            <div class="panel-body">
                <div id="toolbar">
                    <button id="export" class="btn btn-default">Export Excel</button>
                </div>
                <table id="table" data-toggle="table" data-show-refresh="true" data-url='x' data-show-toggle="true" data-show-columns="true" data-search="true" data-select-item-name="toolbar1" data-pagination="true" data-sort-name="name" data-sort-order="desc"
                       data-show-export="true" data-toolbar="#toolbar">
                    <thead>
                        <tr>
                            <th data-field="Id" data-sortable="true" data-formatter="ActionDelete">Delete</th>
                            <th data-field="EmployeeName" data-sortable="true">Employee Name</th>
                            <th data-field="StartDate" data-sortable="true" data-formatter="dateFormat">Start Date</th>
                            <th data-field="EndDate" data-sortable="true" data-formatter="dateFormat">End Date</th>
                            <th data-field="TaskName" data-sortable="true">Default Task</th>
                            <th data-field="RegularRate" data-sortable="true">Regular Rate</th>
                            <th data-field="OTRate" data-sortable="true">OT Rate</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<script src="https://momentjs.com/downloads/moment.min.js"></script>
<script>

    function ActionDelete(value) {

        return '<a onclick="return confirm_click();" href="../EmployeeProject/Delete/' + value + ' "><em class="fa fa-trash"  style="font-size:18px;color:red"></a>';

    }
    function confirm_click(value) {
        return confirm('Are you sure do you want to delete task?');
    }

    function dateFormat(value, row, index) {
        return moment(value).format('MM/DD/YYYY');
    }

    $(document).ready(function () {
        //$("#grid").hide();
        var table = $('#table');
        $('#export').click(function () {
            table.tableExport({
                type: 'excel',
                escape: false
            });
        });
    });

    $("#Report").click(function () {
        debugger;
        var clientNo = $("#ClientID").val();
        var ProjectNo = $("#ProjectId").val();
        var IsActive = $('#IsActive').is(":checked");



        if (clientNo == null || clientNo == "") {
            alert("Please Select Client");
            $("#grid").hide();
            //alert();
            return;
        }
        else if (ProjectNo == null || ProjectNo == "" || ProjectNo == -1) {
            alert("Please Select Project");
            return;
        }
        else if (ProjectNo != null && clientNo != null) {

            $.ajax({

                url: "/EmployeeProject/GetEmployeeProject",
                type: "POST",
                data: JSON.stringify({ 'clientNo': clientNo, 'ProjectNo': ProjectNo, IsActive, 'IsActive': IsActive }),
                dataType: "json",
                traditional: true,
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    debugger;
                    if (typeof (result.Message) == "undefined") {
                        $("#grid").show();
                        $('#table').bootstrapTable('load', result);
                    }
                    else {
                        $("#grid").hide();
                        alert(result.Message)

                    }

                },
                error: function (xhr, status, p3, p4) {
                    var err = "Error " + " " + status + " " + p3 + " " + p4;
                    if (xhr.responseText && xhr.responseText[0] == "{")
                        err = JSON.parse(xhr.responseText).Message;
                    alert(err);
                    return false;
                }
            });
        }
    });

    $("#ClientID").change(function () {
        var clientNo = $("#ClientID").val();
        if (clientNo == null || clientNo == "") {
            alert("Please Select Client");
            return;
        }
        $("input[id='ClientName']").val(clientNo);
        if (clientNo != null || clientNo != "") {
            $.ajax({
                url: "/Tasks/BindProject",
                type: "POST",
                data: JSON.stringify({ 'clientNo': clientNo }),
                dataType: "json",
                traditional: true,
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    debugger;
                    var listItems = "";
                    var list = "";
                    var a = result.bindingAddresses.project;
                    listItems = "<option value='" + -1 + "'>" + "--Please select--" + "</option>"
                    //if (a.length > 0) {
                    //    listItems += "<option value='" + -2 + "'>" + "All Project" + "</option>"
                    //}
                    for (i in a) {
                        listItems += "<option value='" + a[i].Value + "'>" + a[i].Text + "</option>";
                    }
                    $("#ProjectId").html(listItems);
                },
                error: function () {
                    alert("An error has occured!!!");
                }
            });
        }
    });
</script>