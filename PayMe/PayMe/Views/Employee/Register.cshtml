@model  Business.Registration
@{
    ViewBag.Title = "PayMe - Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <ol class="breadcrumb">
        <li>
            <a href="#">
                <em class="fa fa-home"></em>
            </a>
        </li>
        <li class="active">Register</li>
    </ol>
</div><!--/.row-->





<div class="panel panel-default">
    <div  id="title" class="panel-heading">Create User</div>
    <div class="panel-body">

        @if (TempData["MessageRegistration"] != null)
            {
            <p class="alert alert-success" id="successMessage">@TempData["MessageRegistration"]</p>
        }

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @using (Html.BeginForm())
            {
            @Html.AntiForgeryToken()

            <div class="row">
                <div class="col-lg-4">
                    @Html.HiddenFor(model => model.EmployeeID);
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label manadatory" }) <span class="text-danger">*</span>
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @maxlength = 40, @onkeypress = "return onlyspecchar(event);" })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label manadatory" }) <span class="text-danger">*</span>
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @maxlength = 40, @onkeypress = "return onlyspecchar(event);" })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label manadatory" }) <span class="text-danger">*</span>
                    @Html.TextBoxFor(model => model.MobileNo, new { @class = "form-control", @maxlength = 10, @onkeydown = "return OnlyNumeric(this);" })
                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                </div>
                
            </div>

                <div class="row">
                    <div class="clearfix"></div>
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label manadatory" }) <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control", @maxlength = 50 })
                        @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4" >

                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label manadatory" }) <span class="text-danger">*</span>
                        @Html.DropDownList("Gender", new List<SelectListItem>
{
   new SelectListItem{ Text="Male", Value = "1" },
   new SelectListItem{ Text="Female", Value = "2" }
},new { @class = "form-control input-lg" })
                        
                        <br />
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label" }) <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.Birthdate, new { @class = "form-control", @onkeypress = "alert('Choose Birthdate');" })
                        @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
                    </div>
                   
                </div>
        
                <div class="row" id="userContainer">
                   
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label manadatory" }) <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.Username, new { @class = "form-control", @maxlength = 20, @onkeypress = "return onlyspecchar(event);", @onblur = "CheckUsernameExists();" })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label manadatory" }) <span class="text-danger">*</span>
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control", @maxlength = 30, })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label manadatory" }) <span class="text-danger">*</span>
                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                    
                </div>
          
                <div class="row">
                    
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.EmployeeCode, htmlAttributes: new { @class = "control-label manadatory" })
                        @Html.TextBoxFor(model => model.EmployeeCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EmployeeCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label manadatory" })
                        @Html.TextBoxFor(model => model.Designation, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.fkDepartmentID, htmlAttributes: new { @class = "control-label manadatory" }) <span class="text-danger">*</span>
                        @Html.DropDownList("fkDepartmentID", ViewBag.Departments as SelectList, "--Please select--"
, new { @class = "form-control input-lg" })
                        @Html.ValidationMessageFor(model => model.fkDepartmentID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.fkManagerId, htmlAttributes: new { @class = "control-label manadatory" })
                        @Html.DropDownList("fkManagerId", ViewBag.Managers as SelectList, "--Please select--"
, new { @class = "form-control input-lg" })

                        @Html.ValidationMessageFor(model => model.fkManagerId,"", new { @class = "text-danger" })
                       
                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.fkEmploymentLocationID, htmlAttributes: new { @class = "control-label manadatory" }) <span class="text-danger">*</span>
                        @Html.DropDownList("fkEmploymentLocationID", ViewBag.Locations as SelectList, "--Please select--"
, new { @class = "form-control input-lg" })
                        @Html.ValidationMessageFor(model => model.fkEmploymentLocationID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.RoleID, htmlAttributes: new { @class = "control-label manadatory" }) <span class="text-danger">*</span>
                        @Html.DropDownList("RoleID", ViewBag.Roles as SelectList, "--Please select--"
, new { @class = "form-control input-lg" })
                        @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.DateofJoining, htmlAttributes: new { @class = "control-label" }) <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.DateofJoining, new { @class = "form-control", @onkeypress = "alert('Choose DateofJoining');" })
                        @Html.ValidationMessageFor(model => model.DateofJoining, "", new { @class = "text-danger" })
                    </div>
                </div>
                    <br />
                    
             

              
    <div class="panel-heading">Passport Detail</div>
    <div class="panel-body">
        <div class="row">
            <div class="col-lg-4">
                @Html.LabelFor(model => model.PassportNo, htmlAttributes: new { @class = "control-label manadatory" }) 
                @Html.TextBoxFor(model => model.PassportNo, new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.PassportNo, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4">
                @Html.LabelFor(model => model.PassportIssuedBy, htmlAttributes: new { @class = "control-label manadatory" }) 
                @Html.TextBoxFor(model => model.PassportIssuedBy, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PassportIssuedBy, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4">
                @Html.LabelFor(model => model.PassportIssuedOn, htmlAttributes: new { @class = "control-label" }) <span class="text-danger">*</span>
                @Html.TextBoxFor(model => model.PassportIssuedOn, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PassportIssuedOn, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4">
                @Html.LabelFor(model => model.PassportExpireOn, htmlAttributes: new { @class = "control-label" }) <span class="text-danger">*</span>
                @Html.TextBoxFor(model => model.PassportExpireOn, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PassportExpireOn, "", new { @class = "text-danger" })
            </div>
            </div>
        </div>
    <div class="panel-heading">Visa Detail</div>
    <div class="panel-body">
        <div class="row">
            <div class="col-lg-4">
                @Html.LabelFor(model => model.VISANo, htmlAttributes: new { @class = "control-label manadatory" })
                @Html.TextBoxFor(model => model.VISANo, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VISANo, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4">
                @Html.LabelFor(model => model.VISAIssuedBy, htmlAttributes: new { @class = "control-label manadatory" })
                @Html.TextBoxFor(model => model.VISAIssuedBy, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VISAIssuedBy, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4">
                @Html.LabelFor(model => model.VISAIssuedOn, htmlAttributes: new { @class = "control-label manadatory" })
                @Html.TextBoxFor(model => model.VISAIssuedOn, new { @class = "form-control", })
                @Html.ValidationMessageFor(model => model.VISAIssuedOn, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4">
                @Html.LabelFor(model => model.VISAExpireOn, htmlAttributes: new { @class = "control-label manadatory" })
                @Html.TextBoxFor(model => model.VISAExpireOn, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VISAExpireOn, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="panel-heading">Labour Card Detail</div>
    <div class="panel-body">
        <div class="row">
            <div class="col-lg-4">
                @Html.LabelFor(model => model.LabourCardNo, htmlAttributes: new { @class = "control-label manadatory" })
                @Html.TextBoxFor(model => model.LabourCardNo, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LabourCardNo, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4">
                @Html.LabelFor(model => model.LabourCardIssuedBy, htmlAttributes: new { @class = "control-label manadatory" })
                @Html.TextBoxFor(model => model.LabourCardIssuedBy, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LabourCardIssuedBy, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4">
                @Html.LabelFor(model => model.LabourCardIssuedOn, htmlAttributes: new { @class = "control-label manadatory" })
                @Html.TextBoxFor(model => model.LabourCardIssuedOn, new { @class = "form-control", })
                @Html.ValidationMessageFor(model => model.LabourCardIssuedOn, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4">
                @Html.LabelFor(model => model.LabourCardExpireOn, htmlAttributes: new { @class = "control-label manadatory" })
                @Html.TextBoxFor(model => model.LabourCardExpireOn, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LabourCardExpireOn, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-4">
            <input type="submit" id="create" value="Create" class="btn btn-md btn-primary" />
            <input type="submit" id="update" value="Update User" onclick="return update()" class="btn btn-md btn-primary" />
            @Html.ActionLink("Cancel", "Register", "Employee", null, new { @class = "btn btn-md btn-primary" })

        </div>
    </div>
        }
    </div>
    <div class="row" id="payrate" >
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">Pay Rate</div>
                <div class="panel-body">
                    <div style="float:right;"><input type="button" id="AddPayrate" value="Add Pay Rate" class="btn btn-md btn-primary" onclick="OnPayRateClick()" /></div>
                    <table id="table" data-toggle="table" data-show-refresh="true" data-show-toggle="true" data-show-columns="true" data-search="true" data-select-item-name="toolbar1" data-pagination="true" data-sort-name="name" data-sort-order="desc"
                           data-show-export="true" data-toolbar="#toolbar">
                        <thead>
                            <tr>
                                <th data-field="StartDate" data-sortable="true" data-formatter="dateFormat">Start Date</th>
                                <th data-field="EndDate" data-sortable="true" data-formatter="dateFormat">End Date</th>
                                <th data-field="Name" data-sortable="true">Pay Rate Type</th>
                                <th data-field="RegularRate" data-sortable="true">Regular Rate</th>
                                <th data-field="OTRate" data-sortable="true">OT Rate</th>
                              
                                
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
    </div>

<script src="https://momentjs.com/downloads/moment.min.js"></script>
<script type="text/javascript">

    $(document).ready(function () {

        var ID = @ViewBag.editupdate;
        if ( ID==-1 )
        {
            $("#update").hide();
            $("#create").show();
            $("#payrate").hide();
            $('#title').text('Create User');
        }
        else
        {
            $("#update").show();
            $("#create").hide();
            $("#userContainer").hide();
            //$("#Password").hide();
            //$("#ConfirmPassword").hide();

            $('#table').bootstrapTable('refresh', {
                "url": "/Employee/GetPayRateByEmployee/"+ID
                });
            $('#title').text('Update User');
        }
        $("#Birthdate").datepicker
            ({
                dateFormat: "yy-mm-dd",
                changeMonth: true,
                changeYear: true,
                yearRange: "-100:+100",
                onSelect: function (date) {
                    var dob = new Date(date);
                    var today = new Date();

                    if (dob.getFullYear() + 18 < today.getFullYear()) {

                    }
                    else {
                        $("#Birthdate").val('');
                        alert("You are not eligible for Registration");
                    }
                }
            });

        $("#DateofJoining").datepicker
           ({
               dateFormat: "yy-mm-dd",
               changeMonth: true,
               changeYear: true,
               yearRange: "-100:+100"
           });
        $("#PassportIssuedOn").datepicker
          ({
              dateFormat: "yy-mm-dd",
              changeMonth: true,
              changeYear: true,
              yearRange: "-100:+100"
          });
        $("#PassportExpireOn").datepicker
          ({
              dateFormat: "yy-mm-dd",
              changeMonth: true,
              changeYear: true,
              yearRange: "-100:+100"
          });
        $("#VISAIssuedOn").datepicker
          ({
              dateFormat: "yy-mm-dd",
              changeMonth: true,
              changeYear: true,
              yearRange: "-100:+100"
          });
        $("#VISAExpireOn").datepicker
          ({
              dateFormat: "yy-mm-dd",
              changeMonth: true,
              changeYear: true,
              yearRange: "-100:+100"
          });
        $("#LabourCardIssuedOn").datepicker
          ({
              dateFormat: "yy-mm-dd",
              changeMonth: true,
              changeYear: true,
              yearRange: "-100:+100"
          });
        $("#LabourCardExpireOn").datepicker
          ({
              dateFormat: "yy-mm-dd",
              changeMonth: true,
              changeYear: true,
              yearRange: "-100:+100"
          });




    });
    function OnPayRateClick() {
        window.location.href = "/EmployeePayRate/AddPayRate/"+ @ViewBag.editupdate;
   
    }
    function dateFormat(value, row, index) {
        return moment(value).format('MM/DD/YYYY');
    }
    function OnlyNumeric(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode
        if ((charCode < 48 || charCode > 57)) {
            if (charCode == 8 || charCode == 46 || charCode == 0) {
                return true;
            }
            else {
                return false;
            }
        }
    }

    function CheckUsernameExists() {

    }

    function onlyspecchar(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode
        var txt = String.fromCharCode(charCode)
        if ((txt.match(/^[a-zA-Z\b. ]+$/)) || (txt.match(/^[0-9]+$/)) || (charCode == 64) || (charCode == 45) || (charCode == 46) || (charCode == 95) || (charCode == 41)) {
            return true;
        }
        return false;
    }
</script>